# <tag> (<scope>) #<issue>: (If applied, this commit will...) <subject> (Max 72 char)
# feat (login) #13: Implement automated commit messages...............|

# --- BODY ---


# --- FOOTER ---

# Footer Breaking Changes
# BREAKING CHANGE
# close or reference issues,
# closes #12
# see also #13, #23
# reviews by: <name>


# --- COMMIT END ---
# Tag can be
#    feat     (new feature)
#    fix      (bug fix)
#    refactor (refactoring code)
#    style    (formatting, missing semi colons, etc; no code change)
#    doc      (changes to documentation)
#    chore
#    devops
#    test     (adding or refactoring tests; no production code change)
#    version  (version bump/new release; no production code change)
#    hack     (Temporary fix to make things move forward; please avoid it)
#    WIP      (Work In Progress; for intermediate commits to keep patches reasonably sized)
#    defaults (changes default options)

# Note: Multiple tags can be combined, e.g. [fix][jsr292] Fix issue X with methodhandles
# --------------------
# Remember to:
#   * Capitalize the subject line
#   * Use the imperative mood in the subject line
#   * Do not end the subject line with a period
#   * Separate subject from body with a blank line
#   * Use the body to explain what and why vs. how
#   * Mention BREAKING CHANGES if applicable
#   * signify BREAKING CHANGES with exclamation mark, e.g. feat! (api) #132: Change endpoint
